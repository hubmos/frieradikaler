---
import ActivitiesList from '../components/ActivitiesList.astro';
import Chart from '../components/Donut.jsx';
import Line from '../components/Line.jsx';
import { getAllActivities, getSumActivities, createChartDataset, prepareBarChartData, getSumMonthActivities } from '../utils/firestore.js';
import Faq from '../components/Faq.astro'
import Bar from '../components/Bar';
import RoadMap from '../components/RoadMap.astro';
import Header from '../components/header';
const title = "The Fellowship of the Trim"; 


const allActivities = await getAllActivities();
const  athleteActivities =await getSumActivities(allActivities);

const monthAthleteActicities=await getSumMonthActivities(allActivities, false);
const prevMonth=await getSumMonthActivities(allActivities, true);
const barData= await prepareBarChartData(allActivities) 
let totalActivities=0;
allActivities.forEach(activity => {

		if (activity.date=== "2023") {
          
        } else
		{totalActivities+=1;}
      });
type AthleteActivity = {
  totalDistance: number;
  count: number;
  athleteName: string;
}; 
const lineDatas=await createChartDataset(allActivities);
const athleteActivitiesArray: AthleteActivity[] = Object.values(monthAthleteActicities);
const monthSumActivities=monthAthleteActicities.map(athlete => athlete.count).reduce((partialSum, a) => partialSum+a,0);
const prevMonthSum=prevMonth.map(athlete => athlete.count).reduce((partialSum, a) => partialSum+a,0);
const actsSumArray=[totalActivities, monthSumActivities, prevMonthSum];
// Find the highest count of activities
const highestCount = Math.max(...athleteActivitiesArray.map(athlete => athlete.count));
const lowCount = Math.min(...athleteActivitiesArray.map(athlete => athlete.count));
// Filter out all athletes with the highest count
const topAthletes = athleteActivitiesArray.filter(athlete => athlete.count === highestCount);

// Extract names of top athletes
const topAthletesNames = topAthletes.map(athlete => athlete.athleteName);

// Filter out all athletes with the highest count
const bottomAthletes = athleteActivitiesArray.filter(athlete => athlete.count === lowCount);

// Extract names of top athletes
const bottomAthletesNames = bottomAthletes.map(athlete => athlete.athleteName);

// Create a string of names
let topNamesString = '';
if (topAthletesNames.length > 1) {
  // Join all names with commas and 'and' before the last name for proper grammar
  topNamesString = topAthletesNames.slice(0, -1).join(', ') + ' og ' + topAthletesNames[topAthletesNames.length - 1];
} else if (topAthletesNames.length === 1) {
  // If there's only one top athlete
  topNamesString = topAthletesNames[0];
}

let bottomNamesString = '';
if (bottomAthletesNames.length > 1) {
  // Join all names with commas and 'and' before the last name for proper grammar
  bottomNamesString = bottomAthletesNames.slice(0, -1).join(', ') + ' og ' + bottomAthletesNames[bottomAthletesNames.length - 1];
} else if (bottomAthletesNames.length === 1) {
  // If there's only one top athlete
  bottomNamesString = bottomAthletesNames[0];
}
---
<!doctype html>
<html lang="en">
<head>
	<link rel="manifest" href="/frieradikaler/manifest.json">
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/jpg" href="/frieradikaler/images/TEST.jpg" />
    <meta name="generator" content="{Astro.generator}" />
    <title>{title}</title>
</head>
<!-- Your Astro component -->
<script src="../scripts/client_firebase.js"></script>
<body data-theme="retro">
	<div id="navbar" class="navbar fixed bg-opacity-50 backdrop-blur-md z-50">
		<div class="flex-1">
		  <a class="btn btn-ghost text-xl" id="muskelTop">Muskel 2.0</a>
		</div>
		<div class="flex-none">
		  <ul class="menu menu-horizontal px-1">
			<li><a href="#month">Måneden</a></li>
			<li><a href="#year">Stats</a></li>
			<li><a href="#faq">FAQ</a></li>
		  </ul>
		</div>
	  </div>
	<script>
		// Function to adjust navbar opacity
function adjustNavbarOpacity() {
  const navbar = document.getElementById('navbar');
  const scrollHeight = window.scrollY;
  const viewportHeight = window.innerHeight;

  // Calculate the opacity based on scroll position.
  // When scrolled down a full viewport height, opacity should be 0%.
  let opacity = (scrollHeight / viewportHeight);

  // Ensure opacity is between 0 and 1
  opacity = Math.max(0, Math.min(opacity, 0.5));

  // Set the navbar's opacity. You may need to adjust the style properties to match your CSS framework or custom styles.
  navbar.style.backgroundColor = `rgba(228, 216, 180, ${opacity})`; // Assuming a white background, adjust the RGB values as needed.
}

// Listen for scroll events
window.addEventListener('scroll', adjustNavbarOpacity);

// Initial adjustment in case the page is not at the top when loaded
adjustNavbarOpacity();

/* 		document.querySelectorAll('.menu a').forEach(anchor => {
			anchor.addEventListener('click', function (e) {
				e.preventDefault();
				const href = this.getAttribute('href').toLowerCase(); // Ensure lowercase for ID matching
				const targetElement = document.getElementById(href);
				if(targetElement) {
					targetElement.scrollIntoView({
						behavior: 'smooth'
					});
				}
			});
		}); */
		document.getElementById('muskelTop').addEventListener('click', function(e) {
    e.preventDefault(); // Prevent default anchor behavior
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
});

	</script>
	
    <main>
		<Header acts={actsSumArray}/>
        <p></p>
		<div class="max-w-screen-lg mx-auto space-x-10 content-center">
		<div class="flex flex-col w-full ">
			<div class="h-20"></div> 
			<div class="divider mx-20">
			</div>
		  </div>
        <section id="month" class="font-bold text-center"></section>
		<div class=" h-20"></div>
		<h1 class="text-5xl font-bold md:text-center object-center justify-center">Denna måneden</h1>
		<div class="h-20"></div> 
		<div class="text-3xl font-bold  md:text-center">Antall aktiviteta per pers</div>
		<div class="object-center justify-center "><Line activities={lineDatas} client:only/></div>
		<div class="h-10"></div> 
	 </div> 
        <div class="flex flex-col w-full "><ActivitiesList athleteActivities={monthAthleteActicities}/></div>
		<div class="max-w-screen-lg mx-auto content-center">
		<div class="h-20"></div> 
		<div class="h-20"></div> 
        <div class="object-center justify-center text-3xl font-bold text-center">{topNamesString}</div>
        <div class="object-center justify-center text-2xl text-center">ligg jævlig bra ann.</div>
		<div class="h-20"></div> 
		<div class="h-20"></div> 
        <div class=" text-3xl font-bold text-center object-center justify-center">{bottomNamesString}</div>
        <div class="text-2xl text-center object-center justify-center">ligg jævlig dårlig ann.</div>
		<div class="h-20"></div> 
		<div class="h-20"></div> 
		<div class="text-3xl font-bold text-center object-center justify-center">Månedens straff:</div>
        <div class="text-2xl text-center object-center justify-center">TBA</div>
		<div class="flex flex-col w-full "></div>
		<div class="h-20"></div> 
		<div class="divider mx-20"></div> 
        <section id="year" class="text-4xl font-bold text-center"></section>
		<div class=" h-20"></div>
		<h1 class="text-5xl font-bold text-center object-center justify-center">Totalt</h1>
		<!-- <div class=" h-20"></div> -->
<!--         <div class="object-center justify-center "><Chart activities={totalActivities} client:only/></div> -->
		<!-- <div class="h-20"></div> </div> -->
		<div class="max-w-screen-lg mx-auto content-center">
		<div class="h-20"></div> 
		<div class="object-center justify-center"><Bar acts={barData} client:only/></div></div>
		<div class="flex flex-col w-full"><ActivitiesList athleteActivities={athleteActivities}/></div>
		<div class="flex flex-col w-full ">
		<div class="h-20"></div> 
		<div id="mordor"class="divider mx-20"></div> </div>
		<div class="h-20"></div> 
		<h1 class="text-5xl font-bold text-center object-center justify-center">Veien te Mordor</h1>
		<div class="h-20"></div>
		<RoadMap totaleAkts={totalActivities}/>		<div class=" h-20"></div>
		<div class="max-w-screen-lg space-x-10 content-center"></div>
        <section id="faq" class="text-4xl font-bold object-center justify-center text-center ">FAQ</section>
		<div class=" h-20"></div>
        <div class="object-center justify-center"><Faq /></div>
		<div class=" h-20"></div>
		<div class=" h-20"></div>
		<div class=" h-20"></div>
		<div class=" h-20"></div>
    </main>
</body>
</html>
<style is:global>
	html {
    scroll-behavior: smooth;
}
</style>
